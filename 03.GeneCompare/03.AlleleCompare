################################################################################################################################
### /public1/node3_shicy/00.gff.data/05.csi_allele
################################################################################################################################
### similiarity pep/cds/promoter

###### 序列相似性 -- needle
#### Data ready
mamba install -c bioconda emboss seqkit
mamba install -c conda-forge libiconv

cut -f 1,2 06.allele.pair | sed 's/\t/\n/g' > 07.needle/00.allele.id
seqkit grep -f 00.allele.id pep.fa > 01.allele.pep.fa

cut -f 1,2 ../06.allele.pair | awk '{print$0"\t""gene"NR}' > 02.homo

cut -f 1,3 02.homo > tmp1
cut -f 2,3 02.homo > tmp2
cat tmp1 tmp2 > 03.replace.id

seqkit replace -p '(.+)' -r '{kv}' -k 03.replace.id 01.allele.pep.fa > 04.allele.pep.fa.change

seqkit split --by-id --id-regexp "\[(.+)\]" 04.allele.pep.fa.change

for file in `ls *.change`
do
     newFile=`echo $file | sed 's/04.allele.pep.fa.part_/allele_/' | sed 's/\.change//'`
     mv $file $newFile
done

### compare by needle
5 进行批量的全局比对（默认参数）
while read i ; do needle -asequence '04.allele.pep.fa.change.split/'$i -bsequence '04.allele.pep.fa.change.split/'$i -gapopen 10 -gapextend 0.5 -outfile '05.result/'$i'.needle' ; done < list
grep "Similarity" *.needle > 05.needle_result
6 只要每个文件的第二个比对结果
tac 05.needle_result | sed 's/\.needle:# Similarity://g' | awk '!i[$1]++' > 05.needle_result
cut -f 2 -d "(" 05.needle_result | cut -f 1 -d ")" | sed 's/%//g' > 06.tmp.needle

### gene location & length
awk '{print $9"\t"$1"\t"$4"\t"$5"\t"($5-$4+1)}' /public1/node3_shicy/PRJ02_Csikamea/12.redundant_gene/00.all.gene.gff > 00.all.gene.stats
### pep lengh
seqkit fx2tab -l -n  01.allele.pep.fa > 01.allele.pep.table
### similiarity pep/cds/promoter
### kaks
/public1/node3_shicy/00.gff.data/05.csi_allele/07.kaks/csi.wgdi.ks.txt


## Genes located in different genomic regions are extracted, the region identify based on SYRI results
grep -Ff 00.allele2.id -w 02.all.gene | cut -f 2 | grep CsiA > 03.gene_in_all
grep -Ff 00.allele2.id -w 02.SY.gene  | cut -f 2 | grep CsiA > 03.gene_in_sy
grep -Ff 00.allele2.id -w 02.SV.gene  | cut -f 2 | grep CsiA > 03.gene_in_sv
grep -Ff 00.allele2.id -w 02.not.gene | cut -f 2 | grep CsiA > 03.gene_in_not

## plot the result
library(cowplot)
library(dplyr)
library(readr)
library(ggplot2)
library(plyr)
library(ggthemes)
library(ggplot2)
library(ggsci)
library(ggpubr)
library(scales)
library(gghalves)

Data1 <- read.table('Data1.txt')
Data1$V1 <- factor(Data1$V1,levels = c("a", "d", "c","b"))
P1 <-
ggplot(Data1,aes(x=V1,y=V2,fill=V1))+
    geom_bar(stat="identity",position="dodge",width = 0.5)+
    theme(axis.title = element_blank(),legend.position='none') + theme_bw() + theme(legend.position="none",panel.grid.minor = element_blank())

P1_up <- P1 +  ylab('Score')+xlab('Group')+ theme_cowplot()+guides(fill = FALSE, colour = FALSE) +
    scale_colour_brewer(palette = "Dark2")+
    scale_fill_brewer(palette = "Dark2")

pdf("3D.pdf", width=4, height=4)
P1_up
dev.off()


source("geom_flat_violin.R")

Data2 <- read.table('05.all.plot23E')
colnames(Data2)<- c("score","group")
Data2$group <- factor(Data2$group,levels = c("a", "d", "c","b"))

summary_simdat <- summarySE(Data2, measurevar = "score",
                                     groupvars = c("group"))
comparisons <- list(c("b", "c"), c("b", "d"), c("b", "a"))

P2 <- ggplot(Data2,aes(x=group,y=score, fill = group, colour = group))+
    geom_flat_violin(position = position_nudge(x = .25, y = 0),adjust =2)+
    geom_point(position = position_jitter(width = .15), size = .25)+
    geom_boxplot(aes(x = group, y = score, fill = group),outlier.shape = NA, alpha = .5, width = .1, colour = "black")+
    ylab('Score')+xlab('Group')+ theme_cowplot() + guides(fill = FALSE, colour = FALSE) +
    scale_colour_brewer(palette = "Dark2")+
    scale_fill_brewer(palette = "Dark2") + stat_compare_means(comparisons = comparisons,label = "p.signif",
                                                              method = "wilcox.test",hide.ns = F) + theme(legend.position = "none")
pdf("3E.pdf", width=4, height=4)
P2
dev.off()
